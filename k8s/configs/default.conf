worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    keepalive_requests 10000;
    keepalive_timeout 30;
    reset_timedout_connection on;
    send_timeout 5;
    client_header_timeout 60s;
    client_body_timeout 60s;
    proxy_read_timeout 60s;
    underscores_in_headers on;

    upstream backend {
        server backend:8080;
    }

    server {

        server_name api.startupvalley.site;

	location /api {

            if ($request_method = 'OPTIONS') {
	    	add_header 'Access-Control-Allow-Origin' 'https://www.startupvalley.site' always;
            	add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PATCH, OPTIONS';
	    	add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
	    	add_header 'Access-Control-Allow-Credentials' 'true' always;
	    	return 204;
            }

	    proxy_pass http://backend;
	    add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Origin' 'https://www.startupvalley.site' always;
            add_header 'Content-Type' 'multipart/form-data, application/json' always;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
	    proxy_set_header Accept-Encoding gzip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
	    proxy_redirect off;
        }

	location /oauth2/authorization {

            if ($request_method = 'OPTIONS') {
	    	add_header 'Access-Control-Allow-Origin' 'https://www.startupvalley.site' always;
            	add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PATCH, OPTIONS';
	    	add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
	    	add_header 'Access-Control-Allow-Credentials' 'true' always;
	    	return 204;
            }

	    proxy_pass http://backend;
	    add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Origin' 'https://www.startupvalley.site' always;
            add_header 'Content-Type' 'multipart/form-data, application/json' always;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
	    #proxy_set_header Accept-Encoding gzip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
	    proxy_redirect off;
        }

	location /login/oauth2 {

            if ($request_method = 'OPTIONS') {
	    	add_header 'Access-Control-Allow-Origin' 'https://www.startupvalley.site' always;
            	add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PATCH, OPTIONS';
	    	add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
	    	add_header 'Access-Control-Allow-Credentials' 'true' always;
	    	return 204;
            }

	    proxy_pass http://backend;
	    add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Origin' 'https://www.startupvalley.site' always;
            add_header 'Content-Type' 'multipart/form-data, application/json' always;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
	    #proxy_set_header Accept-Encoding gzip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
	    proxy_redirect off;
        }

        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/api.startupvalley.site/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/api.startupvalley.site/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    }

    server {
    	if ($host = api.startupvalley.site) {
            return 308 https://$host$request_uri;
    	}

	server_name api.startupvalley.site;

        listen 80;
    	return 404;
    }
}